/**
    Form for preview materials in Nuke3D Editor
    Copyright (C) 2019 Anton "Vuvk" Shcherbatykh <vuvk69@gmail.com>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/
package com.vuvk.n3d.editor.forms;

import com.vuvk.n3d.components.PanelImagePreview;
import com.vuvk.n3d.resources.Material;
import com.vuvk.n3d.resources.Texture;
import java.awt.Color;
import java.io.File;
import javax.swing.tree.DefaultMutableTreeNode;

/**
 *
 * @author Anton "Vuvk" Shcherbatykh
 */
public class FormMaterialEditor extends javax.swing.JInternalFrame {

    /** редактируемая в данный момент нода в списке */
    public static DefaultMutableTreeNode selectedTreeNode = null;
    /** выбранный материал для редактирования */
    public static Material selectedMaterial = null;
    /** окно редактирования материала */
    static FormMaterialAnimator formMaterialAnimator = null;
    /** поле для рисования предпросмотра */
    static PanelImagePreview imagePreview;
    
    /**
     * Creates new form FormMaterialEditor
     */
    public FormMaterialEditor() {
        initComponents();
        
        imagePreview = new PanelImagePreview();
        imagePreview.setSize(512, 512);
        PanelPreview.add(imagePreview);
        //imagePreview.setLocation(5, 16);  
        imagePreview.setLocation(14, 26); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ButtonClose = new javax.swing.JButton();
        ButtonDelete = new javax.swing.JButton();
        LabelName = new javax.swing.JLabel();
        PanelPreview = new javax.swing.JPanel();
        CheckStretched = new javax.swing.JCheckBox();
        TextName = new javax.swing.JTextField();
        ButtonEdit = new javax.swing.JButton();
        ComboBoxMaterialType = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Редактор материала");
        setPreferredSize(new java.awt.Dimension(775, 629));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        ButtonClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/vuvk/n3d/ico/apply.png"))); // NOI18N
        ButtonClose.setText("Закрыть");
        ButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCloseActionPerformed(evt);
            }
        });

        ButtonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/vuvk/n3d/ico/delete.png"))); // NOI18N
        ButtonDelete.setText("Удалить");
        ButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDeleteActionPerformed(evt);
            }
        });

        LabelName.setText("Имя");

        PanelPreview.setBorder(javax.swing.BorderFactory.createTitledBorder("Предпросмотр"));
        PanelPreview.setDoubleBuffered(false);

        javax.swing.GroupLayout PanelPreviewLayout = new javax.swing.GroupLayout(PanelPreview);
        PanelPreview.setLayout(PanelPreviewLayout);
        PanelPreviewLayout.setHorizontalGroup(
            PanelPreviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 512, Short.MAX_VALUE)
        );
        PanelPreviewLayout.setVerticalGroup(
            PanelPreviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 512, Short.MAX_VALUE)
        );

        CheckStretched.setText("Растянуть");
        CheckStretched.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CheckStretchedStateChanged(evt);
            }
        });

        TextName.setText("<not available>");
        TextName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextNameActionPerformed(evt);
            }
        });
        TextName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextNameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TextNameKeyReleased(evt);
            }
        });

        ButtonEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/vuvk/n3d/ico/edit.png"))); // NOI18N
        ButtonEdit.setLabel("Редактировать");
        ButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonEditActionPerformed(evt);
            }
        });

        ComboBoxMaterialType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "По умолчанию", "С альфа-каналом", "Полупрозрачность" }));
        ComboBoxMaterialType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxMaterialTypeActionPerformed(evt);
            }
        });

        jLabel1.setText("Тип");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(ButtonDelete, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ComboBoxMaterialType, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ButtonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(558, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(LabelName)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TextName, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(ButtonClose, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(CheckStretched)
                        .addComponent(PanelPreview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBoxMaterialType, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonDelete)
                .addContainerGap(459, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelName))
                        .addComponent(PanelPreview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(CheckStretched)
                        .addComponent(ButtonClose))
                    .addContainerGap(13, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        FormMain.formMaterialEditor = null;
    }//GEN-LAST:event_formInternalFrameClosed

    private void ButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCloseActionPerformed
        dispose();
    }//GEN-LAST:event_ButtonCloseActionPerformed

    private void ButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDeleteActionPerformed
        //FormMainAlternative.treeDeleteNode(selectedTreeNode);
    }//GEN-LAST:event_ButtonDeleteActionPerformed

    private void CheckStretchedStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CheckStretchedStateChanged
        imagePreview.isStretched = CheckStretched.isSelected();
        imagePreview.redraw();
    }//GEN-LAST:event_CheckStretchedStateChanged

    private void TextNameChanged() {
        String name = TextName.getText();
        /*
        if (selectedTreeNode != null) {
            selectedTreeNode.setUserObject(name);
            FormMain.treeProjectModel.nodeChanged(selectedTreeNode);
        }
        
        if (selectedMaterial != null) {
            selectedMaterial.setName(name);
        }*/
        
        // подкрасим красным, чтобы выделить поле, в котором обязательно имя
        if (name.length() == 0) {
            TextName.setBackground(Color.red);
        } else {
            TextName.setBackground(Color.white);
        }
    }
    
    private void TextNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextNameActionPerformed
        TextNameChanged();
    }//GEN-LAST:event_TextNameActionPerformed

    private void TextNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextNameKeyPressed
        TextNameChanged();
    }//GEN-LAST:event_TextNameKeyPressed

    private void TextNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextNameKeyReleased
        TextNameChanged();
    }//GEN-LAST:event_TextNameKeyReleased

    private void ButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonEditActionPerformed
        formMaterialAnimator = new FormMaterialAnimator(FormMain.formMain, true);
        formMaterialAnimator.selectedMaterial = selectedMaterial;
        formMaterialAnimator.setVisible(true);
        
        // получить в панель предпросмотра ссылку на новую картинку
        imagePreview.image = selectedMaterial.getFrame(0).getImage();
        imagePreview.redraw();        
    }//GEN-LAST:event_ButtonEditActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        if (selectedMaterial == null) {
            dispose();
        }
        
        // получить имя редактируемой текстуры
        TextName.setText(selectedMaterial.getName());
        // получить в панель предпросмотра ссылку на картинку
        imagePreview.image = selectedMaterial.getFrame(0).getImage();
        imagePreview.redraw();
        // установить тип материала
        int index = selectedMaterial.getMaterialType().ordinal();
        ComboBoxMaterialType.setSelectedItem(index);
        ComboBoxMaterialType.getModel().setSelectedItem(ComboBoxMaterialType.getItemAt(index));
    }//GEN-LAST:event_formInternalFrameActivated

    private void ComboBoxMaterialTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxMaterialTypeActionPerformed
        if (selectedMaterial != null) {
            switch (ComboBoxMaterialType.getSelectedIndex()) {
                default:
                case 0 : 
                    selectedMaterial.setMaterialType(Material.Type.Default);
                    break;     
                    
                case 1 : 
                    selectedMaterial.setMaterialType(Material.Type.AlphaChannel);
                    break;
                    
                case 2 : 
                    selectedMaterial.setMaterialType(Material.Type.Transparent);
                    break;
            }
        }
    }//GEN-LAST:event_ComboBoxMaterialTypeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonClose;
    private javax.swing.JButton ButtonDelete;
    private javax.swing.JButton ButtonEdit;
    private javax.swing.JCheckBox CheckStretched;
    private javax.swing.JComboBox<String> ComboBoxMaterialType;
    private javax.swing.JLabel LabelName;
    private javax.swing.JPanel PanelPreview;
    private javax.swing.JTextField TextName;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
